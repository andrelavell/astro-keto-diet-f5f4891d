---
import BaseLayout from "~/layouts/BaseLayout.astro";
import TagPill from "~/components/Tag.astro";
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog', ({ data }) => import.meta.env.DEV || data.draft === false);
  const tagSet = new Set(posts.flatMap((p) => p.data.tags));
  return Array.from(tagSet).map((tag) => ({ params: { tag }, props: { tag, posts: posts.filter((p) => p.data.tags.includes(tag)) } }));
}

const { tag, posts } = Astro.props as { tag: string; posts: CollectionEntry<'blog'>[] };
---
<BaseLayout title={`Tag: ${tag}`}>
  <h1 class="mb-6 text-3xl font-bold">Tag: {tag}</h1>
  {posts.length === 0 ? (
    <p class="text-zinc-500">No posts for this tag yet.</p>
  ) : (
    <ul class="space-y-8">
      {posts.map((post) => (
        <li>
          <a href={`/blog/${post.slug}`} class="block">
            <h2 class="text-2xl font-semibold hover:underline">{post.data.title}</h2>
            <p class="mt-1 text-zinc-600 dark:text-zinc-300">{post.data.description}</p>
            <p class="mt-2 text-sm text-zinc-500">
              <time datetime={post.data.pubDate.toISOString()}>{post.data.pubDate.toDateString()}</time>
            </p>
            {post.data.tags.length > 0 && (
              <div class="mt-2 flex flex-wrap gap-2">
                {post.data.tags.map((t: string) => <TagPill tag={t} />)}
              </div>
            )}
          </a>
        </li>
      ))}
    </ul>
  )}
</BaseLayout>
